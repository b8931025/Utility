Visual Studio使用技巧 
折疊代碼： 
1、ctrl+M        ctrl+H       ：隱藏選中的段落
2、ctrl+M        ctrl+M      ：展開段落

選擇整個字符串：
    
    在前雙引號前雙擊，或ctrl+單擊；

把代碼放入工具箱：

         選中一段代碼，把代碼拖到工具箱的」常規」選項卡下面，然後可以重命名代碼段，以後往代碼區域拖入就可以了。
    exm:
    /**
     * (C)Neusoft Company
     * Author       ：桃子
     * Email        ：taozi@qq.com
     * Description  ：功能描述
     * DateTime     : 2008-04-19晚上
     * */

使用剪貼環：

         Ctrl+shift+V     ：循環粘貼，直到找到你想要粘貼的內容為止。

複製、剪切、刪除、交換一行代碼：

         Ctrl+C       ：複製當前行；
         Ctrl+X       ：剪切當前行；
         Ctrl+L       ：刪除當前行；
         Alt+shift+T       ：交換當前行與下一行的位置；

用表格方式編輯XML：

         在xml中，右鍵，查看數據網絡。
         注：這種編輯模式在xml序列化的數據集時非常有用。編輯繼承關係更深的xml文件時會產生位置錯誤的寫滿了碎片。

視圖的切換：

         Ctrl+PgUp 、Ctrl+PgDn ：用於切換html視圖和設計視圖，xml視圖和數據視圖

轉到定義後的後退、前進：

         使用右鍵，可以」轉到定義」（方法）。
         Ctrl+_       ：後退
         Ctrl+shift+_      ：前進（前進需要，使用過鼠標右鍵的」轉到定義」之後才會有效果）

同一文件中創建分割窗口：

         將同一個文件分成兩個窗口顯示，這樣可以通過第1個窗口看著文件的上半部分，同時通過第2個窗口操作著文件的下半部分。
         通過拖動下圖中黑色線圈裡面的小小矩形分割塊來實現。

將文件拖入VS.Net中打開：

         將.txt文件拖入VS.Net中：用記事本打開；
         將.doc文件拖入VS.Net中：用word打開；
         將圖片拖入VS.Net中：用畫圖板打開；
         將.pdf文件拖入VS.Net中：用Adobe reader代開

內建瀏覽器的使用：

         使用vs.net內建的瀏覽器，調試、搜索東西的比較方便，不用再單獨去代開瀏覽器。
         打開方法：ctrl+alt+R
         主頁的設置：工具->選項->環境->web瀏覽器->主頁

類視圖關係的利用：

         Ctrl+shift+C：打開類視圖；
         展開命名空間，在類或成員上，ctrl+c，即可提取該類或成員的完整的命名空間到剪貼板。

自定義調用堆棧：

         堆棧跟蹤是vs.net一步步執行程序時對當前方法調用繼承關係給出的直觀顯示。堆棧跟蹤會對一個有一個的方法嵌套調用給出記錄。堆棧跟蹤會將每個方法單獨顯示為一行，並帶有行號和參數值。每一個方法的調用稱為堆棧幀。
         堆棧跟蹤的一個優點在於你可以雙擊任意一行跳轉到程序中該層調用方法的代碼。於是你可以看到程序是如何執行到這一位置的，同事可以看到方法接受的參數值。
         在堆棧窗口中右鍵，可以對堆棧窗口進行一些自定義。

將vs.net與一個運行中的進程鏈接：

         按下F5對程序調試時，vs.net會對項目進行生成。更好的方式是以調試模式啟動程序，即讓vs.net與運行的程序之間建立鏈接，從而進行調試。在vs.net2005中，就是」附加到進程」這個功能，這種功能對web程序非常有用。你可以首先用外部瀏覽器打開有問題的頁面，填寫好必要的表單，然後鏈接該進程開始調試工作。
         開發ASP.NET的程序，主要是附加到w3p.exe進程。

特定異常才中斷：

         Ctrl+alt+E ：打開」異常中斷選擇」窗口；

特定條件下中斷：

         調試-窗口-斷點，打開斷點窗口，找到相應的斷點，右鍵，條件，即可是指特定的條件。

查看代碼定義：

      視圖->代碼定義窗口。
    只需將光標點到相應的類、方法等上面，稍等片刻，即可在代碼定義窗口中查看相應類、方法等的集體代碼。使用改方式，可以減少大量的」轉到定義」操作。

導入和導出編輯器設置：

         將編輯器設置導出保存下來，下次換了機器可以將保存下來的配置文件導入，從而實現個人設置的保存、移動。
         工具->導入和導出設置，根據提示即可操作。

逐個字符地循環訪問字符串：

         字符串的特徵是它總是具有字符數組的特徵。
         總是可以使用簡單foreach循環逐個字符地對一個字符進行循環訪問。

Foreach(char c in myString)
{
     //……
}
也可以使用括號中的序數來指定字符串中的第幾個字符。
Char myChar=myString[n];

將內聯字符串用作對像實例：

       輸出一個字符串後，在後面跟一個點號，智能提示會為你顯示出字符串變量一樣所有可用的方法。
    int n = "abcd".Length;

    使用中間語言反編譯器來查看.net程序：
    中間語言反編譯器（ildasm.exe）：
    C:"Program Files"Microsoft Visual Studio 8"SDK"v2.0"Bin"ildasm.exe
    使用該工具能夠看到程序集中定義的所有命名空間和類，也可以看到微軟中間代碼。

對ASP.NET web程序進行預編譯：

當使用vs.net編譯web程序時，所有的code-behind文件會被編譯到程序集之內。第一次訪問剛剛編譯完的網站時，ASP.NET引擎需要再次進行編譯，產生明顯的延遲，所以需要用工具進行預編譯，以消除第一次訪問的延遲。

方法一：訪問虛擬網址：http://localhost/MyWebApplication/preocmpile.axd
    該虛擬網址具有一個http處理機制，它會遍歷你的web程序，對所有的頁面進行預編譯以消除延遲。

方法二：使用aspnet_compiler.exe來自動完成所有預編譯工作。
    它位於C:"WINDOWS"Microsoft.NET"Framework"v2.0.50727目錄下，
    使用一下方式運行該工具：
    Aspnet_complier –v/MyWebApplication
    這個命令會對整個程序進行預編譯。

為web程序設置ASP.NET版本：

    IISa虛擬目錄a屬性aASP.NET選項卡aASP.NET Version

手動清除系統緩存：

    C:"WINDOWS"Microsoft.NET"Framework"v1.1.4322"gacutil.exe –cdl

再次拋出同樣的異常：

    如果一個異常要被記入日誌，開發者通常會：
try
{
    //…
}
catch(Exception ex)
{
    Log(ex);
    Throw(ex);
}
這樣的代碼是可以的，再次拋出的異常不會被忽略，但：重新拋出異常會是vs.net清空異常堆棧跟蹤，也就是說堆棧跟蹤屬性裡面的catch部分只會記錄該異常的第一次拋出時間。

要在catch部分正確地拋出同一個異常，使用throw就可以了。
try
{
    //…
}
catch(Exception ex)
{
    Log(ex);
    Throw;
}
這樣就可以重新拋出異常，且不會在監視過程中清空堆棧跟蹤。
